rules_version = '2';
service cloud.firestore {
  function isSignedIn() {
    return request.auth != null;
  }
  function isOwnDonation(donation){
  	return isSignedIn() && donation.data.user_email == request.auth.token.email
  }
  function isAdmin(){
   return false;
  }      
// user exists function for future use 
//  function userExists() {
// return exists(/databases/$(database)/documents/user_profiles/$(request.auth.uid));
//    }
// End of user  exists 
  match /databases/{database}/documents {
// rules for donation collections
    match /donations/{donation} {
      allow write: if request.auth != null;
      allow read: if request.auth != null;
      allow delete: if get(/databases/$(database)/documents/user_profiles/$(request.auth.uid)).data.ismoderator == true;
  	}
// rules for support_requests collections
    match /support_requests/{support_request} {
      allow read, write: if request.auth != null;
      allow delete: if get(/databases/$(database)/documents/user_profiles/$(request.auth.uid)).data.ismoderator == true;
  	}
// rules for can_support collections
	  match /can_support/{can_support} {
      allow write : if request.auth != null;
      allow read: if request.auth != null;
      allow delete: if get(/databases/$(database)/documents/user_profiles/$(request.auth.uid)).data.ismoderator == true;
	  }
// rules for categories collections
	  match /categories/{category} {
      allow read : if request.auth != null;
      allow write: if get(/databases/$(database)/documents/user_profiles/$(request.auth.uid)).data.ismoderator == true;
      allow delete: if get(/databases/$(database)/documents/user_profiles/$(request.auth.uid)).data.ismoderator == true;
  	}
// rules for messages collections
  	match /messages/{message} {
      allow read : if request.auth != null;
      allow write: if request.auth != null;
      allow delete: if get(/databases/$(database)/documents/user_profiles/$(request.auth.uid)).data.ismoderator == true;
  	}
// rules for group collections
  	match /groups/{group} {
      allow read : if request.auth != null;
      allow write: if request.auth != null;
      allow delete: if get(/databases/$(database)/documents/user_profiles/$(request.auth.uid)).data.ismoderator == true;
  	}
// rules for application_settings collections
    match /application_settings/{application_setting} {
      allow read : if request.auth != null;
      allow write: if get(/databases/$(database)/documents/user_profiles/$(request.auth.uid)).data.ismoderator == true;
      allow delete: if get(/databases/$(database)/documents/user_profiles/$(request.auth.uid)).data.ismoderator == true;
  	}
// rules for comments collections
  	match /comments/{comment} {
      allow read : if request.auth != null;
      allow write: if request.auth != null;
      allow delete: if get(/databases/$(database)/documents/user_profiles/$(request.auth.uid)).data.ismoderator == true;
    }
// rules for audit collections
  	match /audit/{audit} {
      allow read : if request.auth != null;
      allow write: if request.auth != null;
      allow delete: if get(/databases/$(database)/documents/user_profiles/$(request.auth.uid)).data.ismoderator == true;
    }
    match /{document=**} {
      allow read, write: if get(/databases/$(database)/documents/user_profiles/$(request.auth.uid)).data.ismoderator == true;
    }
  }
}
